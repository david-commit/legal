{"version":3,"sources":["components/NavBar.js","components/Login.js","components/ClientSignUp.js","components/App.js","index.js"],"names":["NavBar","userClient","setUserClient","onClick","fetch","method","then","r","ok","to","Login","useState","email","setEmail","password","setPassword","errors","setErrors","isLoading","setIsLoading","onSubmit","e","preventDefault","headers","body","JSON","stringify","json","user","err","htmlFor","type","id","autoComplete","value","onChange","target","map","style","width","marginLeft","ClientSignUp","name","setName","passwordConfirmation","setPasswordConfirmation","phone","setPhone","password_confirmation","App","useEffect","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0933aa6f.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction NavBar({ userClient, setUserClient }) {\n  function handleLogoutClick() {\n    fetch('/api/clients/logout', {\n      method: 'DELETE',\n    }).then((r) => {\n      if (r.ok) {\n        setUserClient(null);\n      }\n    });\n  }\n  // console.log(userClient)\n\n  return (\n    <>\n      {userClient ? (\n        <button onClick={handleLogoutClick}>Logout</button>\n      ) : (\n        <>\n          <Link to='/clients/login'>\n            <button>Client Login</button>\n          </Link>{' '}\n          <Link to='/clients/signup'>\n            <button>Client Signup</button>\n          </Link>\n        </>\n      )}\n      <br />\n      <br />\n      {userClient ? 'Logged in a client!' : 'Not logged in!'}\n    </>\n  );\n}\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Login({ setUserClient }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch('/api/clients/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email, password }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => setUserClient(user));\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <br />\n        <br />\n        <h1>Client Login</h1>\n        <label htmlFor='email'>email</label>\n        <br />\n        <input\n          type='text'\n          id='email'\n          autoComplete='on'\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <br />\n        <br />\n\n        <label htmlFor='password'>Password</label>\n        <br />\n        <input\n          type='password'\n          id='password'\n          autoComplete='current-password'\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <br />\n        <br />\n\n        <button type='submit'>\n          {isLoading ? 'Loading...' : 'Login'}\n        </button>\n\n        {errors && errors.map((err) => (\n          <li key={err}>{err}</li>\n        ))}\n      </form>\n      <br />\n      <hr style={{ width: '300px', marginLeft: 0 }} />\n      <br />\n      <span>\n        Dont have an account?{' '}\n        <Link to='/clients/signup'>\n          <button>Sign Up</button>\n        </Link>\n      </span>\n    </>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction ClientSignUp({ setUserClient }) {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirmation, setPasswordConfirmation] = useState('');\n  const [phone, setPhone] = useState('');\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setErrors([]);\n    setIsLoading(true);\n    fetch('/api/clients/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n        password_confirmation: passwordConfirmation,\n        phone,\n      }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => setUserClient(user));\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <br />\n        <br />\n        <h1>Client Sign Up</h1>\n        <label htmlFor='name'>Name</label>\n        <br />\n        <input\n          type='text'\n          id='name'\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <br />\n        <br />\n\n        <label htmlFor='email'>email</label>\n        <br />\n        <input\n          type='email'\n          id='email'\n          autoComplete='on'\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <br />\n        <br />\n\n        <label htmlFor='password'>Password</label>\n        <br />\n        <input\n          type='password'\n          id='password'\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          autoComplete='current-password'\n        />\n        <br />\n        <br />\n\n        <label htmlFor='password'>Password Confirmation</label>\n        <br />\n        <input\n          type='password'\n          id='password_confirmation'\n          value={passwordConfirmation}\n          onChange={(e) => setPasswordConfirmation(e.target.value)}\n          autoComplete='current-password'\n        />\n        <br />\n        <br />\n\n        <label htmlFor='phone'>Phone</label>\n        <br />\n        <input\n          type='text'\n          name='phone'\n          id='phone'\n          value={phone}\n          onChange={(e) => setPhone(e.target.value)}\n        />\n        <br />\n        <br />\n\n        <button type='submit'>{isLoading ? 'Loading...' : 'Sign Up'}</button>\n\n        {errors && errors.map((err) => <li key={err}>{err}</li>)}\n      </form>\n      <br />\n      <hr style={{ width: '300px', marginLeft: 0 }} />\n      <br />\n      <span>\n        Have an account?{' '}\n        <Link to='/clients/login'>\n          <button>Log in</button>\n        </Link>\n      </span>\n    </>\n  );\n}\n\nexport default ClientSignUp;\n","import React, { useEffect, useState } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport Login from \"./Login\";\nimport ClientSignUp from \"./ClientSignUp\";\n\nfunction App() {\n  const [userClient, setUserClient] = useState(null);\n  // console.log(userClient)\n\n  useEffect(() => {\n    // CLIENT auto-login\n    fetch('/api/clients/me').then((r) => {\n      if (r.ok) {\n        r.json().then((user) => setUserClient(user));\n      }\n    });\n  }, []);\n\n  // if (!user) return <Login onLogin={setUser} />;\n\n  return (\n    <>\n      <NavBar userClient={userClient} setUserClient={setUserClient} />\n      <main>\n        <Switch>\n          <Route path='/clients/login'>\n            <Login setUserClient={setUserClient} />\n          </Route>\n          <Route path='/clients/signup'>\n            <ClientSignUp setUserClient={setUserClient} />\n          </Route>\n        </Switch>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\"\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}